rules:
  - id: spring-route-authenticated
    patterns:
      - pattern-either:
          - pattern: |
              @$METHOD(...)
              @Secured(...)
              $RETURNTYPE $FUNC(...) { ... }
          - pattern: |
              @Secured(...)
              @$METHOD(...)
              $RETURNTYPE $FUNC(...) { ... }
          - pattern: |
              @$METHOD(...)
              @javax.annotation.security.DenyAll(...)
              $RETURNTYPE $FUNC(...) { ... }
          - pattern: |
              @javax.annotation.security.DenyAll(...)
              @$METHOD(...)
              $RETURNTYPE $FUNC(...) { ... }
          - pattern: |
              @$METHOD(...)
              @jakarta.annotation.security.DenyAll(...)
              $RETURNTYPE $FUNC(...) { ... }
          - pattern: |
              @jakarta.annotation.security.DenyAll(...)
              @$METHOD(...)
              $RETURNTYPE $FUNC(...) { ... }
          - pattern: |
              @$METHOD(...)
              @org.apache.shiro.authz.annotation.RequiresAuthentication(...)
              $RETURNTYPE $FUNC(...) { ... }
          - pattern: |
              @org.apache.shiro.authz.annotation.RequiresAuthentication(...)
              @$METHOD(...)
              $RETURNTYPE $FUNC(...) { ... }
          - pattern: |
              @$METHOD(...)
              @org.apache.shiro.authz.annotation.RequiresUser(...)
              $RETURNTYPE $FUNC(...) { ... }
          - pattern: |
              @org.apache.shiro.authz.annotation.RequiresUser(...)
              @$METHOD(...)
              $RETURNTYPE $FUNC(...) { ... }
          - patterns:
              - pattern: |
                  @$METHOD(...)
                  $RETURNTYPE $FUNC(...) { ... }
              - pattern-either:
                  - pattern-inside: |
                      @Secured(...)
                      class $CLASS { ... }
                  - pattern-inside: |
                      @javax.annotation.security.DenyAll(...)
                      class $CLASS { ... }
                  - pattern-inside: |
                      @jakarta.annotation.security.DenyAll(...)
                      class $CLASS { ... }
                  - pattern-inside: |
                      @org.apache.shiro.authz.annotation.RequiresAuthentication(...)
                      class $CLASS { ... }
                  - pattern-inside: |
                      @org.apache.shiro.authz.annotation.RequiresUser(...)
                      class $CLASS { ... }
      - metavariable-pattern:
          metavariable: $METHOD
          pattern-either:
            - pattern: RequestMapping
            - pattern: DeleteMapping
            - pattern: GetMapping
            - pattern: PatchMapping
            - pattern: PostMapping
            - pattern: PutMapping
    message: Found authenticated Spring route
    metadata:
      references:
        - https://www.baeldung.com/spring-security-method-security
        - https://www.baeldung.com/spring-security-prefilter-postfilter
        - https://www.digitalocean.com/community/tutorials/spring-requestmapping-requestparam-pathvariable-example
        - https://github.com/spring-projects/spring-security/issues/8804
        - https://spring.io/blog/2022/02/21/spring-security-without-the-websecurityconfigureradapter
        - https://www.marcobehler.com/guides/spring-security
        - https://shiro.apache.org/spring-framework.html
        - https://shiro.apache.org/java-annotations-list.html
      route-detect:
        fill: yellow
    languages: [java]
    severity: INFO
  - id: spring-route-authorized
    patterns:
      - pattern-either:
          - pattern: |
              @$METHOD(...)
              @org.springframework.security.access.prepost.PreAuthorize($AUTHZ)
              $RETURNTYPE $FUNC(...) { ... }
          - pattern: |
              @org.springframework.security.access.prepost.PreAuthorize($AUTHZ)
              @$METHOD(...)
              $RETURNTYPE $FUNC(...) { ... }
          - pattern: |
              @$METHOD(...)
              @javax.annotation.security.RolesAllowed($AUTHZ)
              $RETURNTYPE $FUNC(...) { ... }
          - pattern: |
              @javax.annotation.security.RolesAllowed($AUTHZ)
              @$METHOD(...)
              $RETURNTYPE $FUNC(...) { ... }
          - pattern: |
              @$METHOD(...)
              @javax.annotation.security.DeclareRoles($AUTHZ)
              $RETURNTYPE $FUNC(...) { ... }
          - pattern: |
              @javax.annotation.security.DeclareRoles($AUTHZ)
              @$METHOD(...)
              $RETURNTYPE $FUNC(...) { ... }
          - pattern: |
              @$METHOD(...)
              @jakarta.annotation.security.RolesAllowed($AUTHZ)
              $RETURNTYPE $FUNC(...) { ... }
          - pattern: |
              @jakarta.annotation.security.RolesAllowed($AUTHZ)
              @$METHOD(...)
              $RETURNTYPE $FUNC(...) { ... }
          - pattern: |
              @$METHOD(...)
              @jakarta.annotation.security.DeclareRoles($AUTHZ)
              $RETURNTYPE $FUNC(...) { ... }
          - pattern: |
              @jakarta.annotation.security.DeclareRoles($AUTHZ)
              @$METHOD(...)
              $RETURNTYPE $FUNC(...) { ... }
          - pattern: |
              @$METHOD(...)
              @org.apache.shiro.authz.annotation.RequiresPermissions($AUTHZ)
              $RETURNTYPE $FUNC(...) { ... }
          - pattern: |
              @org.apache.shiro.authz.annotation.RequiresPermissions($AUTHZ)
              @$METHOD(...)
              $RETURNTYPE $FUNC(...) { ... }
          - pattern: |
              @$METHOD(...)
              @org.apache.shiro.authz.annotation.RequiresRoles($AUTHZ)
              $RETURNTYPE $FUNC(...) { ... }
          - pattern: |
              @org.apache.shiro.authz.annotation.RequiresRoles($AUTHZ)
              @$METHOD(...)
              $RETURNTYPE $FUNC(...) { ... }
          - patterns:
              - pattern: |
                  @$METHOD(...)
                  $RETURNTYPE $FUNC(...) { ... }
              - pattern-either:
                  - pattern-inside: |
                      @org.springframework.security.access.prepost.PreAuthorize($AUTHZ)
                      class $CLASS { ... }
                  - pattern-inside: |
                      @javax.annotation.security.RolesAllowed($AUTHZ)
                      class $CLASS { ... }
                  - pattern-inside: |
                      @javax.annotation.security.DeclareRoles($AUTHZ)
                      class $CLASS { ... }
                  - pattern-inside: |
                      @jakarta.annotation.security.RolesAllowed($AUTHZ)
                      class $CLASS { ... }
                  - pattern-inside: |
                      @jakarta.annotation.security.DeclareRoles($AUTHZ)
                      class $CLASS { ... }
                  - pattern-inside: |
                      @org.apache.shiro.authz.annotation.RequiresPermissions($AUTHZ)
                      class $CLASS { ... }
                  - pattern-inside: |
                      @org.apache.shiro.authz.annotation.RequiresRoles($AUTHZ)
                      class $CLASS { ... }
      - metavariable-pattern:
          metavariable: $METHOD
          pattern-either:
            - pattern: RequestMapping
            - pattern: DeleteMapping
            - pattern: GetMapping
            - pattern: PatchMapping
            - pattern: PostMapping
            - pattern: PutMapping
    message: Found authorized Spring route
    metadata:
      references:
        - https://www.baeldung.com/spring-security-method-security
        - https://www.baeldung.com/spring-security-prefilter-postfilter
        - https://www.digitalocean.com/community/tutorials/spring-requestmapping-requestparam-pathvariable-example
        - https://github.com/spring-projects/spring-security/issues/8804
        - https://spring.io/blog/2022/02/21/spring-security-without-the-websecurityconfigureradapter
        - https://www.marcobehler.com/guides/spring-security
        - https://shiro.apache.org/spring-framework.html
        - https://shiro.apache.org/java-annotations-list.html
      route-detect:
        fill: green
    languages: [java]
    severity: INFO
  - id: spring-route-unauthenticated
    patterns:
      - pattern-either:
          - patterns:
              - pattern: |
                  @$METHOD(..., path = $PATH, ...)
                  $RETURNTYPE $FUNC(...) { ... }
              - pattern-not: |
                  @$METHOD(...)
                  @org.springframework.security.access.prepost.PreAuthorize(...)
                  $RETURNTYPE $FUNC(...) { ... }
              - pattern-not: |
                  @org.springframework.security.access.prepost.PreAuthorize(...)
                  @$METHOD(...)
                  $RETURNTYPE $FUNC(...) { ... }
              - pattern-not: |
                  @$METHOD(...)
                  @Secured(...)
                  $RETURNTYPE $FUNC(...) { ... }
              - pattern-not: |
                  @Secured(...)
                  @$METHOD(...)
                  $RETURNTYPE $FUNC(...) { ... }
              - pattern-not: |
                  @$METHOD(...)
                  @javax.annotation.security.RolesAllowed(...)
                  $RETURNTYPE $FUNC(...) { ... }
              - pattern-not: |
                  @javax.annotation.security.RolesAllowed(...)
                  @$METHOD(...)
                  $RETURNTYPE $FUNC(...) { ... }
              - pattern-not: |
                  @$METHOD(...)
                  @javax.annotation.security.DenyAll(...)
                  $RETURNTYPE $FUNC(...) { ... }
              - pattern-not: |
                  @javax.annotation.security.DenyAll(...)
                  @$METHOD(...)
                  $RETURNTYPE $FUNC(...) { ... }
              - pattern-not: |
                  @$METHOD(...)
                  @javax.annotation.security.DeclareRoles(...)
                  $RETURNTYPE $FUNC(...) { ... }
              - pattern-not: |
                  @javax.annotation.security.DeclareRoles(...)
                  @$METHOD(...)
                  $RETURNTYPE $FUNC(...) { ... }
              - pattern-not: |
                  @$METHOD(...)
                  @jakarta.annotation.security.RolesAllowed(...)
                  $RETURNTYPE $FUNC(...) { ... }
              - pattern-not: |
                  @jakarta.annotation.security.RolesAllowed(...)
                  @$METHOD(...)
                  $RETURNTYPE $FUNC(...) { ... }
              - pattern-not: |
                  @$METHOD(...)
                  @jakarta.annotation.security.DenyAll(...)
                  $RETURNTYPE $FUNC(...) { ... }
              - pattern-not: |
                  @jakarta.annotation.security.DenyAll(...)
                  @$METHOD(...)
                  $RETURNTYPE $FUNC(...) { ... }
              - pattern-not: |
                  @$METHOD(...)
                  @jakarta.annotation.security.DeclareRoles(...)
                  $RETURNTYPE $FUNC(...) { ... }
              - pattern-not: |
                  @jakarta.annotation.security.DeclareRoles(...)
                  @$METHOD(...)
                  $RETURNTYPE $FUNC(...) { ... }
              - pattern-not: |
                  @$METHOD(...)
                  @org.apache.shiro.authz.annotation.RequiresAuthentication(...)
                  $RETURNTYPE $FUNC(...) { ... }
              - pattern-not: |
                  @org.apache.shiro.authz.annotation.RequiresAuthentication(...)
                  @$METHOD(...)
                  $RETURNTYPE $FUNC(...) { ... }
              - pattern-not: |
                  @$METHOD(...)
                  @org.apache.shiro.authz.annotation.RequiresPermissions(...)
                  $RETURNTYPE $FUNC(...) { ... }
              - pattern-not: |
                  @org.apache.shiro.authz.annotation.RequiresPermissions(...)
                  @$METHOD(...)
                  $RETURNTYPE $FUNC(...) { ... }
              - pattern-not: |
                  @$METHOD(...)
                  @org.apache.shiro.authz.annotation.RequiresRoles(...)
                  $RETURNTYPE $FUNC(...) { ... }
              - pattern-not: |
                  @org.apache.shiro.authz.annotation.RequiresRoles(...)
                  @$METHOD(...)
                  $RETURNTYPE $FUNC(...) { ... }
              - pattern-not: |
                  @$METHOD(...)
                  @org.apache.shiro.authz.annotation.RequiresUser(...)
                  $RETURNTYPE $FUNC(...) { ... }
              - pattern-not: |
                  @org.apache.shiro.authz.annotation.RequiresUser(...)
                  @$METHOD(...)
                  $RETURNTYPE $FUNC(...) { ... }
              - pattern-not-inside: |
                  @org.springframework.security.access.prepost.PreAuthorize(...)
                  class $CLASS { ... }
              - pattern-not-inside: |
                  @Secured(...)
                  class $CLASS { ... }
              - pattern-not-inside: |
                  @javax.annotation.security.RolesAllowed(...)
                  class $CLASS { ... }
              - pattern-not-inside: |
                  @javax.annotation.security.DenyAll(...)
                  class $CLASS { ... }
              - pattern-not-inside: |
                  @javax.annotation.security.DeclareRoles(...)
                  class $CLASS { ... }
              - pattern-not-inside: |
                  @jakarta.annotation.security.RolesAllowed(...)
                  class $CLASS { ... }
              - pattern-not-inside: |
                  @jakarta.annotation.security.DenyAll(...)
                  class $CLASS { ... }
              - pattern-not-inside: |
                  @jakarta.annotation.security.DeclareRoles(...)
                  class $CLASS { ... }
              - pattern-not-inside: |
                  @org.apache.shiro.authz.annotation.RequiresAuthentication(...)
                  class $CLASS { ... }
              - pattern-not-inside: |
                  @org.apache.shiro.authz.annotation.RequiresPermissions(...)
                  class $CLASS { ... }
              - pattern-not-inside: |
                  @org.apache.shiro.authz.annotation.RequiresRoles(...)
                  class $CLASS { ... }
              - pattern-not-inside: |
                  @org.apache.shiro.authz.annotation.RequiresUser(...)
                  class $CLASS { ... }
      - metavariable-pattern:
          metavariable: $METHOD
          pattern-either:
            - pattern: RequestMapping
            - pattern: DeleteMapping
            - pattern: GetMapping
            - pattern: PatchMapping
            - pattern: PostMapping
            - pattern: PutMapping
    message: Found unauthenticated Spring route
    metadata:
      references:
        - https://www.baeldung.com/spring-security-method-security
        - https://www.baeldung.com/spring-security-prefilter-postfilter
        - https://www.digitalocean.com/community/tutorials/spring-requestmapping-requestparam-pathvariable-example
        - https://github.com/spring-projects/spring-security/issues/8804
        - https://spring.io/blog/2022/02/21/spring-security-without-the-websecurityconfigureradapter
        - https://www.marcobehler.com/guides/spring-security
        - https://shiro.apache.org/spring-framework.html
        - https://shiro.apache.org/java-annotations-list.html
      route-detect:
        fill: red
    languages: [java]
    severity: INFO
  - id: spring-route-global-authenticated
    pattern-either:
      - patterns:
          - pattern-inside: |
              @org.springframework.context.annotation.Configuration
              @org.springframework.security.config.annotation.web.configuration.EnableWebSecurity
              public class $CONFIG { ... }
          - pattern-inside: |
              @org.springframework.context.annotation.Bean
              org.springframework.security.web.SecurityFilterChain filterChain(org.springframework.security.config.annotation.web.builders.HttpSecurity $HTTP) { ... }
          - pattern: $HTTP. ... .$AUTHN(...)
          - focus-metavariable: $HTTP
          - metavariable-pattern:
              metavariable: $AUTHN
              pattern-either:
                - pattern: formLogin
                - pattern: httpBasic
                - pattern: oauth2Login
                - pattern: saml2Login
                - pattern: authenticationManager
      - patterns:
          - pattern-inside: |
              @org.springframework.context.annotation.Configuration
              @org.springframework.security.config.annotation.web.configuration.EnableWebSecurity
              public class $CONFIG extends org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter { ... }
          - pattern-inside: |
              @Override
              protected void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity $HTTP) { ... }
          - pattern: $HTTP. ... .$AUTHN(...)
          - focus-metavariable: $HTTP
          - metavariable-pattern:
              metavariable: $AUTHN
              pattern-either:
                - pattern: formLogin
                - pattern: httpBasic
                - pattern: openidLogin
    message: Found Spring global authenticator
    metadata:
      references:
        - https://spring.io/blog/2022/02/21/spring-security-without-the-websecurityconfigureradapter
        - https://docs.spring.io/spring-security/site/docs/current/api/org/springframework/security/config/annotation/web/builders/HttpSecurity.html
        - https://docs.spring.io/spring-security/site/docs/4.2.8.RELEASE/apidocs/org/springframework/security/config/annotation/web/builders/HttpSecurity.html
      route-detect:
        type: global
        fill: green
    languages: [java]
    severity: INFO
